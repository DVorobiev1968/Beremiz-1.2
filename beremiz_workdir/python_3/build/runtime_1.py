#!/usr/bin/env python
# -*- coding: utf-8 -*-
## Code generated by Beremiz python mixin confnode
##

## Code for PLC global variable access
from targets.typemapping import TypeTranslator
import ctypes
_py_ext_0GlobalsDesc = []
__ext_name__ = "py_ext_0"
PLCGlobalsDesc.append(( "py_ext_0" , _py_ext_0GlobalsDesc ))
_test_ctype, _test_unpack, _test_pack = \
    TypeTranslator["INT"]
_PySafeGetPLCGlob_test = PLCBinary.__SafeGetPLCGlob_test
_PySafeGetPLCGlob_test.restype = None
_PySafeGetPLCGlob_test.argtypes = [ctypes.POINTER(_test_ctype)]
_PySafeSetPLCGlob_test = PLCBinary.__SafeSetPLCGlob_test
_PySafeSetPLCGlob_test.restype = None
_PySafeSetPLCGlob_test.argtypes = [ctypes.POINTER(_test_ctype)]
_py_ext_0GlobalsDesc.append((
    "test",
    "INT",
    u'',
    None,
    u''))


## User code in "global" scope


import random



## Beremiz python runtime calls
def _runtime_1_init():
    pass

def _runtime_1_cleanup():
    pass

def _runtime_1_start():
    pass

def _runtime_1_stop():
    pass



del __ext_name__

